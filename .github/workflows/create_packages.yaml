name: Create Packages

on:
  # :TODO: add push
  workflow_dispatch:
    inputs:
      # maybe we don't need this
      version:
        description: 'Version'
        required: true
        default: 'auto'
        type: choice
        options:
          - latest
          - auto
          - ref
      ref:
        description: 'The branch, tag, or SHA of the commit to build'
        required: false
        default: ''
        type: string
        
jobs:
  download_data:
    name: Download Data
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - platform: apple-darwin
            package_type: .app
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 1

      - name: Generate VERSION
        run: |
          #VERSION=${{ github.event.inputs.ref }}
          VERSION=$(git show -s --format=%H  HEAD)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          DATE=$(git show -s --format=%ci HEAD|cut -b1-10)
          echo "DATE=${DATE}" >> $GITHUB_ENV
          echo "VERSION: ${VERSION}"
          echo "DATE:    ${DATE}"

      - name: Prepare Variables
        run: |
          temp=${{ runner.temp }}
          echo "TEMP=${temp}" >> $GITHUB_ENV
          parts_folder=${temp}/parts_folder/
          mkdir -p ${parts_folder}
          echo "PARTS_FOLDER=${parts_folder}" >> $GITHUB_ENV
          package_folder=${temp}/package_folder/
          mkdir -p ${package_folder}
          echo "PACKAGE_FOLDER=${package_folder}" >> $GITHUB_ENV
          runtime_tgz=fiiish-rs-runtime-${{ env.VERSION }}-${{ matrix.target }}.tgz
          fiiish_data_tgz=fiiish-rs-fiiish-data-${{ env.VERSION }}.tgz
          dummy_data_tgz=fiiish-rs-dummy-data-${{ env.VERSION }}.tgz
          app_tgz=fiiish-rs-${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.package_type }}.tgz
          s3_archive_folder=${{ env.DATE }}/${{ env.VERSION }}
          echo "RUNTIME_TGZ=${runtime_tgz}" >> $GITHUB_ENV
          echo "FIIISH_DATA_TGZ=${fiiish_data_tgz}" >> $GITHUB_ENV
          echo "DUMMY_DATA_TGZ=${dummy_data_tgz}" >> $GITHUB_ENV
          echo "S3_ARCHIVE_FOLDER=${s3_archive_folder}" >> $GITHUB_ENV
          # build number will be taken from the parts
          # build_number=$(cat build_number.txt)
          # echo "BUILD_NUMBER=${build_number}" >> $GITHUB_ENV
          echo "ARCHIVE=${temp}/${app_tgz}" >> $GITHUB_ENV

      - name: Copy runtime archive from S3
        run: |
          aws s3 cp s3://artifacts.fiiish-rs.omnimad.net/${{ env.S3_ARCHIVE_FOLDER }}/${{ env.RUNTIME_TGZ }} ${{ env.PARTS_FOLDER }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"        

      - name: Copy fiiish-data archive from S3
        run: |
          aws s3 cp s3://artifacts.fiiish-rs.omnimad.net/${{ env.S3_ARCHIVE_FOLDER }}/${{ env.FIIISH_DATA_TGZ }} ${{ env.PARTS_FOLDER }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      - name: Copy dummy-data archive from S3
        run: |
          aws s3 cp s3://artifacts.fiiish-rs.omnimad.net/${{ env.S3_ARCHIVE_FOLDER }}/${{ env.DUMMY_DATA_TGZ }} ${{ env.PARTS_FOLDER }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      - name: Unpack archives
        run: |
          cd ${{ env.PARTS_FOLDER }}
          mkdir -p fiiish-data
          tar xzf \
            ${{ env.PARTS_FOLDER }}/${{ env.FIIISH_DATA_TGZ }} \
            -C fiiish-data
          mkdir -p dummy-data
          tar xzf \
            ${{ env.PARTS_FOLDER }}/${{ env.DUMMY_DATA_TGZ }} \
            -C dummy-data
          mkdir -p runtime-${{ matrix.target }}
          tar xzf \
            ${{ env.PARTS_FOLDER }}/${{ env.RUNTIME_TGZ }} \
            -C runtime-${{ matrix.target }}

      - name: Display temp
        run: |
          pwd
          ls -R
        working-directory: ${{ env.PARTS_FOLDER }}

      - name: Create Package ${{ matrix.platform }} ${{ matrix.target }} ${{ matrix.package_type }}
        run: |
          # :HACK: always use head version of package helpers
          git checkout HEAD workflow/helpers/package_app.sh
          git checkout HEAD workflow/helpers/apple-darwin/package_app_for_apple-darwin_app.sh          
          ./workflow/helpers/package_app.sh ${{ matrix.platform }} ${{ matrix.target }} ${{ matrix.package_type }}  ${{ env.PARTS_FOLDER }} ${{ env.PACKAGE_FOLDER }}

      - name: Create archive
        run: |
          cd ${{ env.PACKAGE_FOLDER }}
          tar czf ${{ env.ARCHIVE }} .
          ls -l ${{ env.ARCHIVE }}

      - name: Copy archive to S3
        run: |
          aws s3 cp ${{ env.ARCHIVE }} s3://artifacts.fiiish-rs.omnimad.net/${{ env.S3_ARCHIVE_FOLDER }}/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"        


