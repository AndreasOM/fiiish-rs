name: Build Runtime

on:
  # :TODO: add push
  workflow_dispatch:
    inputs:
      # maybe we don't need this
      version:
        description: 'Version'
        required: true
        default: 'auto'
        type: choice
        options:
          - latest
          - auto
          - ref
      ref:
        description: 'The branch, tag, or SHA of the commit to build'
        required: false
        default: ''
        type: string
        
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
            target: x86_64-apple-darwin
            features: "audio-apple"

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 1
#          lfs: ''
#          submodules: ''

      # :TODO: setup platform specific dependencies

      - name: Generate VERSION
        run: |
          VERSION=${{ github.sha }}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          DATE=$(git show -s --format=%ci ${{ github.sha }}|cut -b1-10)
          echo "DATE=${DATE}" >> $GITHUB_ENV

      - name: Prepare Variables
        run: |
          temp=${{ runner.temp }}/archive/
          mkdir -p ${temp}
          echo "TEMP=${temp}" >> $GITHUB_ENV
          echo "TEMP=${temp}"
          archive=fiiish-rs-runtime-${{ env.VERSION }}-${{ matrix.target }}.tgz
          archive_folder=${{ env.DATE }}/${{ env.VERSION }}
          echo "ARCHIVE=${{ runner.temp }}/${archive}" >> $GITHUB_ENV
          echo "ARCHIVE_FOLDER=${archive_folder}" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Cache crates
        uses: actions/cache@v2
        env:
          cache-name: cache-crates
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('fiiish-rs/Cargo.lock') }}

      - name: Run cargo build --release for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --manifest-path fiiish-rs/Cargo.toml --target ${{ matrix.target }} --features ${{ matrix.features }}
      
      - name: Build AppIcon
        if: ${{ matrix.os }} == 'macos-11'
        run: |
          echo "Creating AppIcon"
          echo ":TODO: copy AppIcon to ${{ env.TEMP }}"

      - name: Add Info.plist
        if: ${{ matrix.os }} == 'macos-11'
        run: |
          echo "Adding Info.plist"
          cp fiiish-rs/Info.plist ${{ env.TEMP }}/

      - name: Add build number
        run: |
          echo "Adding build number"
          cp build_number.txt ${{ env.TEMP }}/

      - name: Add binary
        run: |
          echo "Adding binary number"
          cp fiiish-rs/target/${{ matrix.target }}/release/fiiish ${{ env.TEMP }}/

      - name: List result
        run: |
          echo "sha:           ${{ github.sha }}"
          echo "ref_name:      ${{ github.ref_name }}"
          echo "ref:           ${{ github.ref }}"
          echo "ref_type:      ${{ github.ref_type }}"
          echo "event_name:    ${{ github.event_name }}"
          echo "actor:         ${{ github.actor }}"
          echo "run_id         ${{ github.run_id }}"
          # git rev-list --count ${{ github.sha }} # only works with deep clones
          cat build_number.txt
          # ls -l fiiish-rs/target/${{ matrix.target }}/release/
          ls -l ${{ env.TEMP }}/
          
      - name: Create archive
        run: |
          cd ${{ env.TEMP }}
          tar czf ${{ env.ARCHIVE }} .
          ls -l ${{ env.ARCHIVE }}

      - name: Copy archive to S3
        run: |
          aws s3 cp ${{ env.ARCHIVE }} s3://artifacts.fiiish-rs.omnimad.net/${{ env.ARCHIVE_FOLDER }}/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"        

###      - name: Upload Articacts for  ${{ matrix.target }}
###        uses: actions/upload-artifact@v3
###        with:
###          name: fiiish-rs-${{ env.VERSION }}-${{ matrix.target }}
###          path: |
###            fiiish-rs/target/${{ matrix.target }}/release/fiiish
###            build_number.txt
###            fiiish-rs/target/${{ matrix.target }}/release/Info.plist
###            
            
            
            # :TODO: handle binary extension
          
