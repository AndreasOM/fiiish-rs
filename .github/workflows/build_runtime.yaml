name: Build Runtime

on:
  # :TODO: add push
  workflow_dispatch:
    inputs:
      # maybe we don't need this
      version:
        description: 'Version'
        required: true
        default: 'auto'
        type: choice
        options:
          - latest
          - auto
          - ref
      ref:
        description: 'The branch, tag, or SHA of the commit to build'
        required: false
        default: ''
        type: string
        
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
            target: x86_64-apple-darwin
            features: "audio-apple"

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 1
#          lfs: ''
#          submodules: ''

      # :TODO: setup platform specific dependencies

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Cache crates
        uses: actions/cache@v2
        env:
          cache-name: cache-crates
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('fiiish-rs/Cargo.lock') }}

      - name: Run cargo build --release for ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --manifest-path fiiish-rs/Cargo.toml --target ${{ matrix.target }} --features ${{ matrix.features }}
      
      - name: List result
        run: |
          echo "sha:           ${{ github.sha }}"
          echo "ref_name:      ${{ github.ref_name }}"
          echo "ref:           ${{ github.ref }}"
          echo "ref_type:      ${{ github.ref_type }}"
          echo "event_name:    ${{ github.event_name }}"
          echo "actor:         ${{ github.actor }}"
          echo "GITHUB_RUN_ID  ${{ env.GITHUB_RUN_ID }}"
          echo "run_id         ${{ github.run_id }}"
          git rev-list --count ${{ github.sha }}
          ls -l fiiish-rs/target/${{ matrix.target }}/release/
          
      - name: Generate VERSION
        run: |
          VERSION=${{ github.sha }}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          
      - name: Upload Articacts for  ${{ matrix.target }}
        uses: actions/upload-artifact@v3
        with:
          name: fiiish-rs-${{ env.VERSION }}-${{ matrix.target }}
          path: |
            fiiish-rs/target/${{ matrix.target }}/release/fiiish
            
            
            # :TODO: handle binary extension
          
